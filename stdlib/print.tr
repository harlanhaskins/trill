func print(_ value: Any) {
  if value is *Int8 {
    print(value as *Int8)
  } else if value is Int {
    print(value as Int)
  } else if value is Int8 {
    print(value as Int8)
  } else if value is Int16 {
    print(value as Int16)
  } else if value is Int32 {
    print(value as Int32)
  } else if value is UInt {
    print(value as UInt)
  } else if value is UInt8 {
    print(value as UInt8)
  } else if value is UInt16 {
    print(value as UInt16)
  } else if value is UInt32 {
    print(value as UInt32)
  } else if value is Bool {
    print(value as Bool)
  } else if value is *Void {
    printf("%p", value as *Void)
  } else if value is String {
    print(value as String)
  } else if value is AnyDictionary {
    print(value as AnyDictionary)
  } else if value is AnyArray {
    print(value as AnyArray)
  } else {
    Mirror(reflecting: value).printToFile(stdout)
  }
}

func println(_ value: Any) {
  print(value)
  putchar('\n' as Int32)
}

func print(_ string: String) {
    print(string.cString)
}

func print(_ string: *Int8) {
    printf("%s", string)
}

func print(_ bool: Bool) {
    print(bool ? "true" as *Int8 : "false" as *Int8)
}

func print(_ int: Int) {
    printf("%d", int)
}

func print(_ int: Int8) {
    printf("%c", int)
}

func print(_ int: Int16) {
    printf("%d", int)
}

func print(_ int: Int32) {
    printf("%d", int)
}

func print(_ int: UInt) {
    printf("%u", int)
}

func print(_ int: UInt8) {
    printf("%u", int)
}

func print(_ int: UInt16) {
    printf("%d", int)
}

func print(_ int: UInt32) {
    printf("%u", int)
}

func print(_ float: Float) {
    printf("%f", float)
}

func print(_ double: Double) {
    printf("%f", double)
}

func print(_ array: AnyArray) {
  array.dump()
}

func print(_ dictionary: AnyDictionary) {
  dictionary.dump()
}
