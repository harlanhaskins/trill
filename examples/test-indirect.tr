indirect type Foo {
  var bar: Int
  func setBar(_ bar: Int) {
    self.bar = bar
  }
  deinit {
    printf("Deinitializing %p\n", self)
  }
}

type Bar {
  var baz: Int
  var foo: Foo
  func reset() {
    self.foo.setBar(5)
  }
}

func fooSetBar(_ foo: Foo, _ bar: Int) {
  foo.bar = bar
}

func main() {
  for var i = 0; i < 100_000; i += 1 {
    let f = Foo(bar: 100)
    if i % 1000 == 0 {
      printf("allocated %d objects\n", i)
    }
  }
}
